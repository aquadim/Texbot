<?php
// –ë–æ—Ç
class Bot {

	private $responses; // –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
	private $wait_responses; // –°–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ—Å—å–±–æ–π –ø–æ–¥–æ–∂–¥–∞—Ç—å
	private $keyboards; // –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
	private $data; // –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –í–ö
	private $vid; // ID –í–ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∑–∞–ø—Ä–æ—Å—É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞

	public function __construct($input) {
		$this->responses = array(
			"hi1"=> "–ü—Ä–∏–≤–µ—Ç, —è - –¢–µ—Ö–±–æ—Ç. –ú–æ—è –∑–∞–¥–∞—á–∞ - –æ–±–ª–µ–≥—á–∏—Ç—å —Ç–≤–æ—é –∂–∏–∑–Ω—å, –Ω–æ, –¥–ª—è –Ω–∞—á–∞–ª–∞, –º–Ω–µ –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤",
			"hi2"=> "–û–∑–Ω–∞–∫–æ–º—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–µ–∂–¥–µ —á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏",
			"tos"=> "1. –Ø –º–æ–≥—É –æ—à–∏–±–∞—Ç—å—Å—è, –≤–µ–¥—å —è –≤—Å–µ–≥–æ –ª–∏—à—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥\n2. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ –≤–æ–∑–º–æ–∂–Ω—ã–π —É—â–µ—Ä–±, –ø—Ä–∏—á–∏–Ω—ë–Ω–Ω—ã–π –æ—à–∏–±–∫–æ–π –≤ —Ñ—É–Ω–∫—Ü–∏–∏, –≤–µ–¥—å –æ–Ω–∏ –Ω–µ –º–æ–≥—É—Ç –∑–Ω–∞—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à—ë–ª —Å–±–æ–π\n3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–æ–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∏ –Ω–∏ –∫ —á–µ–º—É –≤–∞—Å –Ω–µ –æ–±—è–∑—ã–≤–∞–µ—Ç\n4. –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è",
			"question_are_you_student"=> "%d. –¢—ã —Å—Ç—É–¥–µ–Ω—Ç?",
			"question-who-are-you"=> "%d. –í—ã–±–µ—Ä–∏ —Å–µ–±—è –∏–∑ —Å–ø–∏—Å–∫–∞",
			"question-who-are-you-no-number"=> "–í—ã–±–µ—Ä–∏ —Å–µ–±—è –∏–∑ —Å–ø–∏—Å–∫–∞",
			"question_what_is_your_course"=> "%d. –ù–∞ –∫–∞–∫–æ–º –∫—É—Ä—Å–µ —Å–µ–π—á–∞—Å —É—á–∏—à—å—Å—è?",
			"question_what_is_your_group"=> "%d. –ö–∞–∫–∞—è –∏–∑ —ç—Ç–∏—Ö –≥—Ä—É–ø–ø —Ç–≤–æ—è?",
			"question_can_send_messages"=> "%d. –ú–æ–∂–Ω–æ –ª–∏ —Ç–µ–±–µ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–æ—Ç–∞, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è—Ö –∏ –¥—Ä.?",
			"welcome_post_reg"=> "–û—Ç–≤–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
			"pick_day"=> "–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å",
			"no_relevant_data"=> "–Ø –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞—é –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, –ø–æ–¥–æ–∂–¥–∏ –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è",
			"enter_login"=> "–í–≤–µ–¥–∏ –ª–æ–≥–∏–Ω",
			"enter_password"=> "–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å",
			"done"=> "–ì–æ—Ç–æ–≤–æ!",
			"returning"=> "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è",
			"get-next-student"=> "–û—Å—Ç–∞—ë—Ç—Å—è %s %s –¥–æ –Ω–∞—á–∞–ª–∞ –ø–∞—Ä—ã %s. –ù–∞—á–∞–ª–æ –≤ %s (%s)",
			"get-next-teacher"=> "–û—Å—Ç–∞—ë—Ç—Å—è {0} {1} –¥–æ –Ω–∞—á–∞–ª–∞ –ø–∞—Ä—ã {2}. –ù–∞—á–∞–ª–æ –≤ {3} —Å –≥—Ä—É–ø–ø–æ–π {4} –≤ {5}",
			"get-next-fail"=> "–ù–µ —É–¥–∞–ª–æ—Å—å —É–∑–Ω–∞—Ç—å –∫–∞–∫–∞—è –ø–∞—Ä–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–µ–π",
			"select-teacher"=> "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è (—Å—Ç—Ä. {0}/{1})",
			"select-course"=> "–í—ã–±–µ—Ä–∏ –∫—É—Ä—Å –≥—Ä—É–ø–ø—ã",
			"select-group"=> "–í—ã–±–µ—Ä–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≥—Ä—É–ø–ø—ã",
			"no-data"=> "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö",
			"bells-schedule"=> "–ó–≤–æ–Ω–∫–∏ –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:\n1 –ø–∞—Ä–∞: 8:00 - 9:35 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 8:45)\n2 –ø–∞—Ä–∞: 9:45 - 11:20 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 10:30)\n–ö–ª —á–∞—Å: 11:30 - 12:15\n–û–±–µ–¥: 12:15-13:00\n3 –ø–∞—Ä–∞: 13:00 - 14:35 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 13:45)\n4 –ø–∞—Ä–∞: 14:45 - 16:20 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 15:30)\n5 –ø–∞—Ä–∞: 16:30 - 18:05 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 17:15).\n\n–ó–≤–æ–Ω–∫–∏ —Å–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞ –ø–æ –ø—è—Ç–Ω–∏—Ü—É\n1 –ø–∞—Ä–∞: 8:00 - 9:35 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 8:45)\n2 –ø–∞—Ä–∞: 9:45 - 11:20 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 10:30)\n–û–±–µ–¥: 11:20 - 12:20\n3 –ø–∞—Ä–∞: 12:20 - 13:55 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 13:05)\n4 –ø–∞—Ä–∞: 14:05 - 15:40 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 14:50)\n5 –ø–∞—Ä–∞: 15:50 - 17:25 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 16:35)\n\n–ó–≤–æ–Ω–∫–∏ –≤ —Å—É–±–±–æ—Ç—É\n1 –ø–∞—Ä–∞: 8:00 - 9:25 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 8:40)\n2 –ø–∞—Ä–∞: 09:35 - 11:00 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 10:15)\n3 –ø–∞—Ä–∞: 11:10 - 12:35 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 11:50)\n4 –ø–∞—Ä–∞: 12:45 - 14:10 (–ø–µ—Ä–µ—Ä—ã–≤ –≤ 13:25)",
			"profile-identifier-student"=> "üë• –í–∞—à–∞ –≥—Ä—É–ø–ø–∞: {0}",
			"profile-identifier-teacher"=> "üë§ –í–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è: {0}",
			"profile-journal-not-filled"=> "\n‚ö† –í—ã –Ω–µ —É–∫–∞–∑—ã–≤–∞–ª–∏ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –∂—É—Ä–Ω–∞–ª–∞",
			"profile-journal-filled"=> "\nüÜî –õ–æ–≥–∏–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è —Å–±–æ—Ä–∞ –≤–∞—à–∏—Ö –æ—Ü–µ–Ω–æ–∫ - {0}",
			"profile-mail-allowed"=> "\n‚úÖ –í—ã —Ä–∞–∑—Ä–µ—à–∏–ª–∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º —Ä–∞—Å—Å—ã–ª–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
			"profile-mail-not-allowed"=> "\n‚ùå –í—ã –∑–∞–ø—Ä–µ—Ç–∏–ª–∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º —Ä–∞—Å—Å—ã–ª–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
			"type-cabinet"=> "–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∫–∞–±–∏–Ω–µ—Ç–∞",
			"updating-menu"=> "–û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é!",
			"started-editing"=> "–ù–∞—á–∏–Ω–∞–µ–º –∏–∑–º–µ–Ω—è—Ç—å —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!",
			"wrong_input"=> "–≠—Ç–æ –Ω–µ –ø–æ–¥–æ–π–¥—ë—Ç",
			"admin-welcome"=> "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏!",
			"enter-mail-target"=> "–í–≤–µ–¥–∏ —Ü–µ–ª—å —Ä–∞—Å—Å—ã–ª–∫–∏. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è *–ò–°, 3*, *, 3–ò–°",
			"enter-mail-message"=> "–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏",
			"mail-saved"=> "–î–∞–Ω–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, –∑–∞—Ç—Ä–æ–Ω—É—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {0}",
			"mail-disabled"=> "–ë–æ–ª—å—à–µ –Ω–µ –ø–æ—Ç—Ä–µ–≤–æ–∂—É! –ï—Å–ª–∏ —Å–Ω–æ–≤–∞ –∑–∞—Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∏ - —Ç–æ –≤–∫–ª—é—á–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è",
			"stats"=> "–í–æ—Ç HTML —Ä–∞–∑–º–µ—Ç–∫–∞, –ø–æ–∑–≤–æ–ª—é—â–∞—è –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
		);

		$this->wait_responses = array(
			"üïì –ü–æ–¥–æ–∂–¥–∏",
			"üïì –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ",
			"üïì –°–µ–∫—É–Ω–¥—É",
			"üïì –ë—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ!",
			"üïì –†–∏—Å—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É...",
			"üïì –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ...",
			"üïì –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç",
			"üïì –£–∂–µ —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ —ç—Ç–∏–º"
		);

		$this->keyboards = array(
			"yn_text"=> '{"one_time":true,"inline":false,"buttons":[[{"color":"primary","action":{"type":"text","payload":null,"label":"–î–∞"}},{"color":"negative","action":{"type":"text","payload":null,"label":"–ù–µ—Ç"}}]]}',
			"cancel"=> '{"one_time":false,"inline":false,"buttons":[[{"color":"negative","action":{"type":"text","payload":null,"label":"–û—Ç–º–µ–Ω–∞"}}]]}',
			"to-hub"=> '{"one_time":false,"inline":false,"buttons":[[{"color":"primary","action":{"type":"text","payload":null,"label":"–ù–∞ –≥–ª–∞–≤–Ω—É—é"}}]]}',
			"course_nums"=> '{"one_time":true,"inline":false,"buttons":[[{"color":"primary","action":{"type":"text","payload":null,"label":"1"}},{"color":"primary","action":{"type":"text","payload":null,"label":"2"}}],[{"color":"primary","action":{"type":"text","payload":null,"label":"3"}},{"color":"primary","action":{"type":"text","payload":null,"label":"4"}}]]}',
			"tos"=> '{"one_time":false,"inline":true,"buttons":[[{"color":"primary","action":{"type":"text","payload":"{\"type\":1}","label":"–ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"}}]]}',
			"unsubscribe"=> '{"one_time":false,"inline":true,"buttons":[[{"color":"negative","action":{"type":"text","payload":"{\"type\":9}","label":"–ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∏"}}]]}',
			"stud_hub"=> '{"one_time":false,"inline":false,"buttons":[[{"color":"primary","action":{"type":"text","payload":null,"label":"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"}},{"color":"primary","action":{"type":"text","payload":null,"label":"–û—Ü–µ–Ω–∫–∏"}},{"color":"primary","action":{"type":"text","payload":null,"label":"–ß—Ç–æ –¥–∞–ª—å—à–µ?"}}],[{"color":"secondary","action":{"type":"text","payload":null,"label":"–ì–¥–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å?"}},{"color":"secondary","action":{"type":"text","payload":null,"label":"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã"}},{"color":"secondary","action":{"type":"text","payload":null,"label":"–ó–≤–æ–Ω–∫–∏"}}],[{"color":"secondary","action":{"type":"text","payload":null,"label":"–ü—Ä–æ—Ñ–∏–ª—å"}}]]}',
			"teacher_hub"=> '{"one_time":false,"inline":false,"buttons":[[{"color":"primary","action":{"type":"text","payload":null,"label":"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"}},{"color":"primary","action":{"type":"text","payload":null,"label":"–ö–∞–±–∏–Ω–µ—Ç—ã"}},{"color":"primary","action":{"type":"text","payload":null,"label":"–ß—Ç–æ –¥–∞–ª—å—à–µ?"}}],[{"color":"secondary","action":{"type":"text","payload":null,"label":"–ì–¥–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å?"}},{"color":"secondary","action":{"type":"text","payload":null,"label":"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã"}},{"color":"secondary","action":{"type":"text","payload":null,"label":"–ó–≤–æ–Ω–∫–∏"}}],[{"color":"secondary","action":{"type":"text","payload":null,"label":"–ü—Ä–æ—Ñ–∏–ª—å"}}]]}',
			"enter_journal_credentials"=> '{"one_time":false,"inline":true,"buttons":[[{"color":"primary","action":{"type":"text","payload":"{\"type\":3,\"after_profile\":false}","label":"–í–≤–µ—Å—Ç–∏ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å"}}]]}',
			"empty"=> '{"one_time":false,"inline":false,"buttons":[]}',
			"admin-hub"=> '{"one_time":false,"inline":false,"buttons":[[{"color":"primary","action":{"type":"text","payload":null,"label":"–†–∞—Å—Å—ã–ª–∫–∞"}},{"color":"primary","action":{"type":"text","payload":null,"label":"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"}},{"color":"negative","action":{"type":"text","payload":null,"label":"–í—ã—Ö–æ–¥"}}]]}'
		);

		// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
		$this->data = json_decode($input);

		// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
		if ($this->data->secret != $_ENV['vk_secret']) {
			exit();
		}

		// –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–∫—Ä–∏–ø—Ç –º–æ–≥ —Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ —á–µ–º 10 —Å–µ–∫—É–Ω–¥
		// –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω —É–º–µ—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ —á–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—Å–ª–∏ vk –Ω–µ –ø–æ–ª—É—á–∏–ª "ok"
		// –∑–∞ 10 —Å–µ–∫—É–Ω–¥ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞, –æ–Ω –ø—Ä–∏—à–ª—ë—Ç –∑–∞–ø—Ä–æ—Å –µ—â—ë —Ä–∞–∑. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —Å–µ—Ä–≤–µ—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª –ø–µ—Ä–≤—ã–π
		// –∑–∞–ø—Ä–æ—Å, –∏ –∫–æ–≥–¥–∞ –æ–Ω –µ–≥–æ –∑–∞–∫–æ–Ω—á–∏–ª, –æ–Ω –æ—Ç–≤–µ—Ç–∏–ª –±—ã "ok", –Ω–æ –≤—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å —É–∂–µ –ø—Ä–∏—Å–ª–∞–ª—Å—è...
		// –¢–∞–∫ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å 5 —Ä–∞–∑ –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –≤–∫ –Ω–µ —Å–¥–∞—Å—Ç—Å—è –∏ –Ω–µ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
		// https://ru.stackoverflow.com/q/893864/418543
		header("Connection: close");
		ob_start();
		echo "ok";
		$size = ob_get_length();
		header("Content-Length: ".$size);
		ob_end_flush();
		flush();
		
		switch ($this->data->type) {
			case "message_new":
				$this->vid = $this->data->object->message->from_id;
				break;
			case "message_event":
				$this->vid = $this->data->object->peer_id;
				break;
			default:
				$this->vid = null;
				break;
		}

		set_exception_handler(array($this, "reportException"));
		set_error_handler(array($this, "reportError"), E_ALL);
	}

	#region –†–∞–±–æ—Ç–∞ —Å API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ

	// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
	// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç id –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	private function sendMessageVk($vid, string $msg = null, string $keyboard = null, string $attachment = null) : int {
		$params = array(
			"peer_id" => $vid,
			"message" => $msg,
			"keyboard" => $keyboard,
			"attachment" => $attachment,
			"random_id" => 0,
			"access_token" => $_ENV['vk_token'],
			"v" => "5.131"
		);
		$data = file_get_contents(vk_api_endpoint."messages.send?".http_build_query($params));
		return json_decode($data)->response;
	}

	// –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
	private function editMessageVk($vid, int $msg_id, string $msg = null, string $keyboard = null, string $attachment = null) {
		$params = array(
			"peer_id" => $vid,
			"message" => $msg,
			"keyboard" => $keyboard,
			"attachment" => $attachment,
			"conversation_message_id" => $msg_id,
			"access_token" => $_ENV['vk_token'],
			"v" => "5.131"
		);
		$fp = fopen(vk_api_endpoint."messages.edit?".http_build_query($params), 'r');
		fclose($fp);
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ callback-–∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	private function answerCallbackVk() : void {
		$params = array(
			"event_id" => $this->data->event_id,
			"user_id" => $this->data->object->user_id,
			"peer_id" => $this->data->object->peer_id,
			"access_token" => $_ENV['vk_token'],
			"v" => "5.131"
		);
		$fp = fopen(vk_api_endpoint."messages.sendMessageEventAnswer?".http_build_query($params), 'r');
		fclose($fp);
	}

	// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–º–µ—Ç–∫—É –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
	private function getKeyboardButton($label, $color, $type, $payload = null) {
		return array(
			"color" => $color,
			"action" => array(
				"type" => $type,
				"payload" => $payload,
				"label" => $label
			)
		);
	}

	// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–º–µ—Ç–∫—É –≤—Å–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
	private function getKeyboard($one_time, $is_inline, $buttons) {
		$keyboard = array("inline"=>$is_inline, "buttons"=>$buttons);
		if (!$is_inline) {
			$keyboard["one_time"] = $one_time;
		}
		return json_encode($keyboard);
	}
	#endregion

	#region –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä
	// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
	private function makeKeyboardSelectCourse($intent) {
		$buttons = array(
			array(
				$this->getKeyboardButton("1", "primary", "callback", array("type"=>PAYLOAD_SELECT_COURSE, "intent"=>$intent, "num"=>1)),
				$this->getKeyboardButton("2", "primary", "callback", array("type"=>PAYLOAD_SELECT_COURSE, "intent"=>$intent, "num"=>2))
			),
			array(
				$this->getKeyboardButton("3", "primary", "callback", array("type"=>PAYLOAD_SELECT_COURSE, "intent"=>$intent, "num"=>3)),
				$this->getKeyboardButton("4", "primary", "callback", array("type"=>PAYLOAD_SELECT_COURSE, "intent"=>$intent, "num"=>4))
			)
		);
		return $this->getKeyboard(true, true, $buttons);
	}

	// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
	private function makeKeyboardSelectGroup(mysqli_result $groups, int $intent) {
		$buttons = array();
		$added_in_row = 0; // –°–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —ç—Ç–æ—Ç —Ä—è–¥
		$current_row = 0; // –ö–∞–∫–æ–π —Å–µ–π—á–∞—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Ä—è–¥
		while ($group = $groups->fetch_array()) {
			$buttons[$current_row][] = $this->getKeyboardButton(
				$group["spec"],
				"primary",
				"callback",
				array("type"=>PAYLOAD_SELECT_GROUP, "intent"=>$intent, "gid" => $group["id"])
			);
			$added_in_row++;
			if ($added_in_row == 3) { // 3 –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Å—Ç—Ä–æ–∫—É
				$current_row++;
				$buttons[$current_row] = array();
				$added_in_row = 0;
			}
		}
		return $this->getKeyboard(true, true, $buttons);
	}

	// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
	private function makeKeyboardSelectRelevantDate($intent, $target) {
		$relevant_dates = ScheduleModel::getRelevantDates();
		if ($relevant_dates->num_rows == 0) {
			return false;
		}

		// –°—Ç—Ä–æ–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
		$date_today = date('Y-m-d');
		$date_tomorrow = date('Y-m-d', time() + 86400);

		$buttons = array();
		while ($date = $relevant_dates->fetch_array()) {
			// –°–æ–∑–¥–∞—ë–º –Ω–∞–¥–ø–∏—Å—å
			if ($date['day'] == $date_today) {
				$label = '–°–µ–≥–æ–¥–Ω—è';
			} else if ($date['day'] == $date_tomorrow) {
				$label = '–ó–∞–≤—Ç—Ä–∞';
			} else {
				$parts = explode('-', $date['day']);
				$label = $parts[2].' '.$GEN_MONTH_NUM_TO_STR[$parts[1]];
			}

			$buttons[] = array($this->getKeyboardButton(
				$label,
				'primary',
				'callback',
				array('type'=>PAYLOAD_SELECT_DATE, 'intent'=>$intent, 'target'=>$target, 'date'=>$date['day'])
			));
		}

		return $this->getKeyboard(false, true, $buttons);
	}
	#endregion

	#region –û—Ç–≤–µ—Ç—ã –¢–µ—Ö–±–æ—Ç–∞
	// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
	private function answerShowTerms($vid) {
		$this->sendMessageVk($vid, $this->responses['tos']);
	}

	// –ü–µ—Ä–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º
	private function answerOnMeet($vid) {
		$this->sendMessageVk($vid, $this->responses['hi1']);
		$this->sendMessageVk($vid, $this->responses['hi2'], $this->keyboards['tos']);
		$this->answerAskIfStudent($vid, 1);
	}

	// –í–æ–ø—Ä–æ—Å: –¢—ã —Å—Ç—É–¥–µ–Ω—Ç?
	private function answerAskIfStudent($vid, $progress) {
		$this->sendMessageVk($vid, sprintf($this->responses['question_are_you_student'], $progress), $this->keyboards['yn_text']);
	}

	// –í–æ–ø—Ä–æ—Å: –ù–∞ –∫–∞–∫–æ–º —Ç—ã –∫—É—Ä—Å–µ?
	private function answerAskCourseNumber($vid, $progress) {
		$this->sendMessageVk(
			$vid,
			sprintf($this->responses['question_what_is_your_course'], $progress),
			$this->makeKeyboardSelectCourse(INTENT_REGISTRATION)
		);
	}

	// –í–æ–ø—Ä–æ—Å: –ö–∞–∫–∞—è –∏–∑ —ç—Ç–∏—Ö –≥—Ä—É–ø–ø —Ç–≤–æ—è?
	private function answerAskStudentGroup($vid, $progress, $course) {
		$group_names = database.getGroupsByCourse(course);
		$this->sendMessageVk(
			$vid,
			$this->responses['question_what_is_your_group'].format(progress),
			$this->makeKeyboardSelectGroup($group_names, null, intents.registration)
		);
	}

	// –í–æ–ø—Ä–æ—Å: –º–æ–∂–Ω–æ –ª–∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∏
	private function answerAskIfCanSend($vid, $progress) {
		$this->sendMessageVk($vid, sprintf($this->responses['question_can_send_messages'], $progress), $this->keyboards['yn_text']);
	}

	// –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
	private function answerWrongInput($vid) {
		$this->sendMessageVk($vid, $this->responses['wrong_input']);
	}

	// –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å
	private function answerPostRegistration($vid, $user_type) {
		if ($user_type == 1) {
			$this->sendMessageVk($vid, $this->responses['welcome_post_reg'], $this->keyboards['stud_hub']);
		} else {
			$this->sendMessageVk($vid, $this->responses['welcome_post_reg'], $this->keyboards['teacher_hub']);
		}
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –¥–∞—Ç—ã
	private function answerSelectDate($vid, $target, $intent, $edit=false, $msg_id=null) {
		$keyboard = $this->makeKeyboardSelectRelevantDate($intent, $target);

		if (!$keyboard) {
			$this->sendMessageVk($vid, $this->responses['no_relevant_data']);
		} else {
			if (!$edit) {
				$this->sendMessageVk($vid, $this->responses['pick_day'], $keyboard);
			} else {
				$this->editMessageVk($vid, $msg_id, $this->responses['pick_day'], $keyboard);
			}
		}
	}

	// –ò–∑–º–µ–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –ø–æ–¥–æ–∂–¥–∞—Ç—å
	private function answerEditWait($vid, $msg_id) {
		$this->editMessageVk($vid, $msg_id, $this->wait_responses[array_rand($this->wait_responses)]);
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –ø–æ–¥–æ–∂–¥–∞—Ç—å
	private function answerSendWait($vid) : int {
		return $this->sendMessageVk($vid, $this->wait_responses[array_rand($this->wait_responses)]);
	}

	// –ü–æ–∫–∞–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø—ã
	private function answerShowScheduleForGroup($vid, $date, $gid, $msg_id) {
		$response = ScheduleModel::getForGroup($date, $gid);

		if (!$response) { // –¢–∞–∫–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç
			$this->editMessageVk($vid, $msg_id, $this->responses['no-data']);
			return;
		}

		if ($response['photo_id'] !== null) { // –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–µ–π—á–∞—Å
			$this->sendMessageVk($vid, null, null, 'photo-'.$_ENV['public_id'].'_'+$response['photo_id']);
			return;
		}

		// –ù–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –¥–µ–ª–∞–µ–º
		$this->answerEditWait($vid, $msg_id);
		$data = PairModel::getPairsOfSchedule($response["id"]);
		$gen = new GroupScheduleGenerator(null, $data, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.");
		$attachment = $gen->run();
		$this->editMessageVk($vid, $msg_id, null, null, $attachment);

		// TODO: –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å photo_id
	}

	//~ private function answerShowScheduleForTeacher($vid, $msg_id, $date, $teacher_id) {
		//~ // –ü–æ–∫–∞–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
		//~ response = database.getCachedScheduleOfTeacher(date, teacher_id)
		//~ if response:
			//~ # –ï—Å—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ
			//~ $this->sendMessageVk($vid, null, null, 'photo-'+str($_ENV['public_id'])+'_'+str(response['photo_id']))
			//~ return
		//~ msg_id = $this->sendMessageVk($vid, self.getRandomWaitText())

		//~ self.tasks.append(graphics.TeacherScheduleGenerator(
			//~ $vid,
			//~ $_ENV['public_id'],
			//~ self.themes['rasp'],
			//~ self,
			//~ 'teacher-schedule',
			//~ msg_id,
			//~ date,
			//~ teacher_id
		//~ ))
		//~ self.tasks[-1].start()
	//~ }

	// –ü–æ–∫–∞–∑ –æ—Ü–µ–Ω–æ–∫
	private function answerShowGrades($vid, $user_id, $login, $password) {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∞–ª –æ—Ü–µ–Ω–∫–∏ –Ω–µ–¥–∞–≤–Ω–æ
		//~ $photo_id = GradesModel::getRecent($user_id);
		//~ if ($photo_id) {
			//~ $this->sendMessageVk($vid, null, null, 'photo'.$vid.'_'.$photo_id);
		//~ } else {
			$msg_id = $this->answerSendWait($vid);
		//~ }

		$data = $this->getGradesData($login, $password);
		$gen = new GradesGenerator($vid, $data, '–¢–≤–æ–∏ –æ—Ü–µ–Ω–∫–∏ –Ω–∞ '.date('Y-m-d H:i'));
		$attachment = $gen->run();
		//$this->editMessageVk($vid, $msg_id, null, null, $attachment);
		$this->sendMessageVk($vid, null, null, $attachment);
	}

	//~ // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ª–æ–≥–∏–Ω –∂—É—Ä–Ω–∞–ª–∞
	//~ private function answerAskJournalLogin($vid) {
		//~ $this->sendMessageVk($vid, $this->responses['enter_login'], $this->keyboards['cancel']);
	//~ }

	//~ // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –∂—É—Ä–Ω–∞–ª–∞
	//~ private function answerAskJournalPassword($vid) {
		//~ $this->sendMessageVk($vid, $this->responses['enter_password'], $this->keyboards['cancel']);
	//~ }

	//~ // –û—Ç–≤–µ—Ç: –ì–æ—Ç–æ–≤–æ!
	//~ private function answerDone($vid) {
		//~ $this->sendMessageVk($vid, $this->responses['done']);
	//~ }

	//~ // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ö–∞–±
	//~ private function answerToHub($vid, $user_type, $text) {
		//~ if ($user_type == 1) {
			//~ $this->sendMessageVk($vid, $text, $this->keyboards['stud_hub']);
		//~ } else {
			//~ $this->sendMessageVk($vid, $text, $this->keyboards['teacher_hub']);
		//~ }
	//~ }

	private function answerWhatsNext($vid, $target, $for_teacher) {
		// –û—Ç–≤–µ—á–∞–µ—Ç –∫–∞–∫–∞—è –ø–∞—Ä–∞ —Å–ª–µ–¥—É—é—â–∞—è
		if (!$for_teacher) {
			$response = PairModel::getNextGroupPair($target);
		} else {
			$response = PairModel::getNextTeacherPair($target);
		}

		if (!$response) {
			$this->sendMessageVk($vid, $this->responses['get-next-fail']);
			return;
		}

		// –û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
		$hours_left = intdiv($response['dt'], 60);
		$minutes_left = $response['dt'] % 60;

		if ($for_teacher == false) {
			$this->sendMessageVk($vid, sprintf($this->responses['get-next-student'],
				$this->num_word($hours_left, array('—á–∞—Å', '—á–∞—Å–∞', '—á–∞—Å–æ–≤'), true),
				$this->num_word($minutes_left, array('–º–∏–Ω—É—Ç–∞', '–º–∏–Ω—É—Ç—ã', '–º–∏–Ω—É—Ç'), true),
				$response['pair_name'],
				$response['pair_time'],
				$response['pair_place']
			));
		}
	}

	//~ private function answerSelectTeacher($vid, message_id, intent) {
		//~ // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è

		//~ # –£–∑–Ω–∞—ë–º –∫–∞–∫–∏–µ –≤–æ–æ–±—â–µ –µ—Å—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏
		//~ teachers = database.getAllTeachers()
		//~ keyboards = self.makeTeacherSelectKeyboards(teachers, intent, message_id)
		//~ amount = len(keyboards)

		//~ for index, k in enumerate(keyboards) {
			//~ $this->sendMessageVk($vid, $this->responses['select-teacher'].format(index + 1, amount), k)

	//~ private function answerUpdateHub($vid, user_type) {
		//~ // –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –º–µ–Ω—é
		//~ if (user_type == 1{
			//~ $this->sendMessageVk($vid, $this->responses['updating-menu'], $this->keyboards['stud_hub'])

	//~ // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–∞
	//~ private function answerSelectGroupCourse($vid, $msg_id, $intent, $edit) {
		//~ $keyboard = $this->keyboardSelectCourse($msg_id, $intent);
		//~ if (($edit) {
			//~ $this->editMessageVk($vid, $msg_id, $this->responses['select-course'], keyboard);
		//~ } else {
			//~ $this->sendMessageVk($vid, $this->responses['select-course'], keyboard);
		//~ }
	//~ }

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –≥—Ä—É–ø–ø—ã
	private function answerSelectGroupSpec($msg_id, $course, $intent) {
		$groups = GroupModel::getAllByCourse($course);
		$this->editMessageVk(
			$msg_id,
			$this->vid,
			$this->responses['select-group'],
			$this->makeKeyboardSelectGroup($groups, $intent)
		);
	}

	//~ private function answerBells($vid) {
		//~ // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∑–≤–æ–Ω–∫–æ–≤
		//~ $this->sendMessageVk($vid, $this->responses['bells-schedule'])

	//~ private function answerShowProfile($vid, msg_id, user, edit) {
		//~ // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
		//~ message = ""

		//~ if (user['type'] == 1{
			//~ # –°—Ç—É–¥–µ–Ω—Ç
			//~ message += $this->responses['profile-identifier-student'].format(database.getGroupName(user['gid']))
			//~ if (user['journal_login'] == null{
				//~ message += $this->responses['profile-journal-not-filled']
			//~ else{
				//~ message += $this->responses['profile-journal-filled'].format(user['journal_login'])
		//~ else{
			//~ # –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
			//~ message += $this->responses['profile-identifier-teacher'].format(database.getTeacherSurname(user['teacher_id']))

		//~ if (user['allows_mail'] == 1{
			//~ message += $this->responses['profile-mail-allowed']
		//~ else{
			//~ message += $this->responses['profile-mail-not-allowed']

		//~ keyboard = self.makeProfileKeyboard(msg_id, user)

		//~ if (edit{
			//~ api.edit($vid, msg_id, message, keyboard)
		//~ else{
			//~ $this->sendMessageVk($vid, message, keyboard)

	//~ private function answerAskTeacherSignature($vid, question_progress) {
		//~ // –ü—Ä–æ—Å–∏—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤—ã–±—Ä–∞—Ç—å —Å–µ–±—è –∏–∑ —Å–ø–∏—Å–∫–∞
		//~ return $this->sendMessageVk($vid, $this->responses['question-who-are-you'].format(question_progress), $this->keyboards['empty'])

	//~ private function answerAskCabNumber($vid) {
		//~ // –ü—Ä–æ—Å–∏—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞–ø–∏—Å–∞—Ç—å –∫–∞–±–∏–Ω–µ—Ç
		//~ $this->sendMessageVk($vid, $this->responses['type-cabinet'], $this->keyboards['cancel'])

	//~ private function answerShowCabinetOccupancy($vid, date, place) {
		//~ // –ü–æ–∫–∞–∑ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
		//~ response = database.getCachedPlaceOccupancy(date, place)
		//~ if (response{
			//~ # –ï—Å—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ
			//~ $this->sendMessageVk($vid, null, null, 'photo-'+str($_ENV['public_id'])+'_'+str(response['photo_id']))
			//~ return

		//~ msg_id = $this->sendMessageVk($vid, self.getRandomWaitText())
		//~ self.tasks.append(graphics.CabinetGenerator(
			//~ $vid,
			//~ $_ENV['public_id'],
			//~ self.themes['rasp'],
			//~ self,
			//~ 'teacher-schedule',
			//~ msg_id,
			//~ date,
			//~ place
		//~ ))
		//~ self.tasks[-1].start()

	//~ private function answerAskTeacherWhenEditing($vid) {
		//~ // –ü—Ä–æ—Å–∏—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤—ã–±—Ä–∞—Ç—å —Å–µ–±—è –∫–æ–≥–¥–∞ –æ–Ω –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∏–∑ —Å—Ç—É–¥–µ–Ω—Ç–∞
		//~ return $this->sendMessageVk($vid, $this->responses['question-who-are-you-no-number'])

	//~ private function answerOnStartedEdit($vid) {
		//~ // –ù—É–∂–Ω–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–º–µ–Ω—ã —Ç–∏–ø–∞ –ø—Ä–æ—Ñ–∏–ª—è
		//~ return $this->sendMessageVk($vid, $this->responses['started-editing'], $this->keyboards['empty'])

	//~ private function answerShowAdminPanel($vid) {
		//~ // –ü–æ–∫–∞–∑ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
		//~ $this->sendMessageVk($vid, $this->responses['admin-welcome'], $this->keyboards['admin-hub'])

	//~ private function answerAskMailTarget($vid) {
		//~ // –ü—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª—å —Ä–∞—Å—Å—ã–ª–∫–∏
		//~ $this->sendMessageVk($vid, $this->responses['enter-mail-target'], $this->keyboards['cancel'])

	//~ private function answerAskMailMessage($vid) {
		//~ // –ü—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
		//~ $this->sendMessageVk($vid, $this->responses['enter-mail-message'], $this->keyboards['cancel'])

	//~ private function answerMailDisabled($vid) {
		//~ // –£–≤–µ–¥–æ–º–ª—è–µ—Ç –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏
		//~ $this->sendMessageVk($vid, $this->responses['mail-disabled'])

	//~ private function answerShowStats($vid, file_id) {
		//~ // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
		//~ $this->sendMessageVk($vid, $this->responses['stats'], null, 'doc'+str($vid)+'_'+str(file_id))

	#endregion

	# region –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
	// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
	public function mailErrorReport($message, $file, $line, $trace) {
		$report = "<pre>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –¢–µ—Ö–±–æ—Ç–µ</pre>\n";
		$report .= "<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ—è–≤–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞: </b> https://vk.com/id".$this->vid."\n";
		$report .= "<b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏: </b> ".$message."\n";
		$report .= "<b>–§–∞–π–ª: </b> ".$file."\n";
		$report .= "<b>–°—Ç—Ä–æ–∫–∞: </b> ".$line."\n";

		// –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –æ—à–∏–±–∫–∏
		if (isset($trace) && count($trace) > 0) {
			$report .= "<b>–¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –æ—à–∏–±–∫–∏:</b> (—á–µ–º –≤—ã—à–µ —Ç–µ–º –ø–æ–∑–∂–µ)<pre>\n";
			foreach ($trace as $item) {
				$report .= "{$item['file']}:{$item['line']} -- —Ñ—É–Ω–∫—Ü–∏—è {$item['function']}\n";
			}
			$report .= "</pre>\n";
		} else {
			$report .= "<b>–¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –æ—à–∏–±–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</b>\n";
		}

		if ($_ENV["notifications_type"] == "email") { // email
			$headers = "MIME-Version: 1.0\n";
			$headers .= "From: –¢–µ—Ö–±–æ—Ç <{$_ENV['notifier_email']}>\n";
			$headers .= "Content-type: text/html; charset=utf-8\n";

			mail($_ENV["webmaster_email"], "–û—à–∏–±–∫–∞ –≤ –¢–µ—Ö–±–æ—Ç–µ", $report, $headers);

		} else if ($_ENV["notifications_type"] == "telegram") {
			// telegram
			$params = ['chat_id'=>$_ENV['notifier_bot_chat'], 'text'=>$report, 'parse_mode'=>'html'];
			$fp = fopen("https://api.telegram.org/bot".$_ENV['notifier_bot_token']."/sendMessage?".http_build_query($params), 'r');
			fclose($fp);
		}

		$this->sendMessageVk($this->vid, "–û–π-—ë–π! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —É–≤–µ–¥–æ–º–ª—ë–Ω, –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –±—É–¥–µ—Ç –ø–æ—á–∏–Ω–µ–Ω–æ");
		exit();
	}

	// Callback-—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è set_exception_handler
	public function reportException(Throwable $e) {
		$this->mailErrorReport($e->getMessage(), $e->getFile(), $e->getLine(), $e->getTrace());
	}

	// Callback-—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è set_error_handler
	public function reportError(int $errno, string $errstr, string $errfile, int $errline) {
		$this->mailErrorReport($errstr, $errfile, $errline, null);
	}
	#endregion

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	private function handlePlainMessage($text, &$user): bool {
		$vid = $user['vk_id'];

		switch ($user['state']) {
			case STATE_REG_1: // –ü–æ—Å–ª–µ "–¢—ã —Å—Ç—É–¥–µ–Ω—Ç?
				if ($text == '–î–∞') {
					// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å—Ç—É–¥–µ–Ω—Ç
					$user['type'] = 1;
					$user['question_progress'] += 1;
					$user['state'] = STATE_SELECT_COURSE;
					$this->answerAskCourseNumber($vid, $user['question_progress']);
					return true;
				} else if ($text == '–ù–µ—Ç') {
					// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å;
					$user['type'] = 2;
					$user['question_progress'] += 1;
					$user['state'] = STATE_VOID;
					$msg_id = $this->answerAskTeacherSignature($vid, $user['question_progress']);
					$this->answerSelectTeacher($vid, $msg_id + 1, intents.registration);
					return true;
				} else {
					// –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥;
					$this->answerWrongInput($vid);
					return false;
				};

			case STATE_REG_CAN_SEND: // –ü–æ—Å–ª–µ "–ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è?" –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏;
				if ($text == '–î–∞') {
					$user['allows_mail'] = 1;
				} else if ($text == '–ù–µ—Ç') {
					$user['allows_mail'] = 0;
				} else {
					$this->answerWrongInput($this->vid);
					return false;
				}
				$user['state'] = STATE_HUB;
				$this->answerPostRegistration($this->vid, $user['type']);
				return true;

			case STATE_HUB: // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
				switch ($text) {
					case '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
						if ($user['type'] == 1) {
							$this->answerSelectDate($this->vid, $user['gid'], INTENT_STUD_RASP_VIEW);
						} else {
							$this->answerSelectDate($this->vid, $user['teacher_id'], INTENT_TEACHER_RASP_VIEW);
						}
						StatModel::create($user['gid'], $user['type'], FUNC_RASP);
						return false;
					case '–û—Ü–µ–Ω–∫–∏':
						if ($user['type'] != 1) return false; // –ù–µ —Å—Ç—É–¥–µ–Ω—Ç–∞–º –Ω–µ–ª—å–∑—è
						$this->answerShowGrades($this->vid, $user['id'], $user['journal_login'], $user['journal_password']);
						StatModel::create($user['gid'], $user['type'], FUNC_GRADES);
						return true;
					//~ case '–ö–∞–±–∏–Ω–µ—Ç—ã' and $user['type'] == 2) {
						//~ $user['state'] = States.enter_cab;
						//~ $this->answerAskCabNumber($this->vid);
						//~ database.addStatRecord($user['gid'], $user['type'], 7);
						//~ return true;
					case '–ß—Ç–æ –¥–∞–ª—å—à–µ?':
						if ($user['type'] == 1) {
							$this->answerWhatsNext($this->vid, $user['gid'], false);
						} else {
							$this->answerWhatsNext($this->vid, $user['teacher_id'], true);
						}
						StatModel::create($user['gid'], $user['type'], FUNC_RASP);
					//~ case '–ì–¥–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å?') {
						//~ $this->answerSelectTeacher($this->vid, $msg_id + 1, INTENT_TEACHER_RASP_VIEW);
						//~ database.addStatRecord($user['gid'], $user['type'], 4);
					//~ case '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã') {
						//~ $this->answerSelectGroupCourse($this->vid, $msg_id + 1, INTENT_STUD_RASP_VIEW, false);
						//~ database.addStatRecord($user['gid'], $user['type'], 5);
					//~ case '–ó–≤–æ–Ω–∫–∏') {
						//~ $this->answerBells($this->vid);
						//~ database.addStatRecord($user['gid'], $user['type'], 6);
					//~ case '–ü—Ä–æ—Ñ–∏–ª—å') {
						//~ $this->answerShowProfile($this->vid, $msg_id + 1, $user, false);
					//~ case '.') {
						//~ $this->answerUpdateHub($this->vid, $user['type']);
					//~ case 'admin' and $user['admin']) {
						//~ // "–û–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø—Ä—è–º–æ —Ä—è–¥–æ–º —Å —Ç–æ–±–æ–π –∏ —Ç—ã –µ–≥–æ –¥–∞–∂–µ –Ω–µ –∑–∞–º–µ—á–∞–µ—à—å" - –ú–∞–π–∫, –∏–∑ —Å–µ—Ä–∏–∞–ª–∞ "–û—á–µ–Ω—å —Å—Ç—Ä–∞–Ω–Ω—ã–µ –¥–µ–ª–∞";
						//~ $user['state'] = States.admin;
						//~ $this->answerShowAdminPanel($this->vid);
						//~ return true;
					default:
						return false;
				}

			default:
				return false;
		}
		
		//~ if ($user['state'] == STATE_VOID) {;
			//~ // –ó–∞–≥–ª—É—à–∫–∞;
			//~ return false;
		
		//~ if ($user['state'] == STATE_SELECT_COURSE) {
			//~ // –ü–æ—Å–ª–µ "–ù–∞ –∫–∞–∫–æ–º —Ç—ã –∫—É—Ä—Å–µ?" –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏;
			//~ if (!(is_numeric($text) && 1 <= intval($text) && intval($text) < 5)) {
				//~ $this->answerWrongInput($this->vid);
				//~ return false;
			//~ }
			//~ $user['state'] = STATE_VOID;
			//~ $user['question_progress'] += 1;
			//~ $this->answerAskStudentGroup($this->vid, $user['question_progress'], $text);
			//~ return true;
		//~ }
		
		
		//~ if ($user['state'] == States.enter_login or $user['state'] == States.enter_login_after_profile) {;
			//~ // –í–≤–æ–¥ –ª–æ–≥–∏–Ω–∞;
			//~ if ($this->checkIfCancelled($text, $user)) {;
				//~ return true;
			//~ $user['journal_login'] = $text;
			//~ if ($user['state'] == States.enter_login) {;
				//~ $user['state'] = States.enter_password;
			//~ else { {;
				//~ $user['state'] = States.enter_password_after_profile;
			//~ $this->answerAskJournalPassword($this->vid);
			//~ return true;

		//~ if ($user['state'] == States.enter_password or $user['state'] == States.enter_password_after_profile) {;
			//~ // –í–≤–æ–¥ –ø–∞—Ä–æ–ª—è;
			//~ if ($this->checkIfCancelled($text, $user)) {;
				//~ return true;
			//~ $user['journal_password'] = hashlib.sha1(bytes($text, "utf-8")).hexdigest();

			//~ $this->answerDone($this->vid);
			//~ $this->answerToHub($this->vid, $user['type'], $this->answers['returning']);
			//~ if ($user['state'] == States.enter_password_after_profile) {;
				//~ $this->answerShowProfile($this->vid, $msg_id + 1, $user, false);

			//~ $user['state'] = STATE_HUB;
			//~ return true;

		//~ if ($user['state'] == States.enter_cab) {;
			//~ // –í–≤–æ–¥ –∫–∞–±–∏–Ω–µ—Ç–∞;
			//~ if ($this->checkIfCancelled($text, $user)) {;
				//~ return true;
			//~ $user['state'] = STATE_HUB;
			//~ $this->answerToHub($this->vid, $user['type'], $this->answers['returning']);
			//~ $this->answerSelectDate($this->vid, $msg_id + 1, $text, INTENT_VIEW_CABINETS);
			//~ return true;

		//~ if ($user['state'] == States.admin) {;
			//~ if ($text == '–í—ã—Ö–æ–¥') {;
				//~ $user['state'] = STATE_HUB;
				//~ $this->answerToHub($this->vid, $user['type'], $this->answers['returning']);
				//~ return true;

			//~ if ($text == '–†–∞—Å—Å—ã–ª–∫–∞') {;
				//~ $user['state'] = States.mail_input_target;
				//~ database.addMailRecord($user['id']);
				//~ $this->answerAskMailTarget($this->vid);
				//~ return true;

			//~ if ($text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞') {;
				//~ // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML;
				//~ path = $this->generateHtmlStats();
				//~ // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç;
				//~ doc_id = api.uploadDocument($this->vid, path);
				//~ $this->answerShowStats($this->vid, doc_id);
		//~ if ($user['state'] == States.mail_input_target) {;
			//~ mail_id = database.getMostRecentMailRecord($user['id']);
			//~ if ($text == '–û—Ç–º–µ–Ω–∞') {;
				//~ $user['state'] = States.admin;
				//~ $this->answerToAdminHub($this->vid, $this->answers['returning']);
				//~ database.deleteMail(mail_id);
				//~ return true;
			//~ $user['state'] = States.mail_input_message;
			//~ database.updateMail(mail_id, 'target', $text);
			//~ $this->answerAskMailMessage($this->vid);
			//~ return true;
		//~ if ($user['state'] == States.mail_input_message) {;
			//~ mail_id = database.getMostRecentMailRecord($user['id']);
			//~ $user['state'] = States.admin;
			//~ if ($text == '–û—Ç–º–µ–Ω–∞') {;
				//~ database.deleteMail(mail_id);
				//~ $this->answerToAdminHub($this->vid, $this->answers['returning']);
			//~ else { {;
				//~ database.updateMail(mail_id, 'message', $text);
				//~ api.tgAlert(;
					//~ '–ê–≤—Ç–æ—Ä —Ä–∞—Å—Å—ã–ª–∫–∏) { https) {//vk.com/id'+str($user['vk_id'])+'. –¢–µ–∫—Å—Ç) { '+$text,;
					//~ '–°–æ–∑–¥–∞–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∞ –≤ —Ç–µ—Ö–±–æ—Ç–µ';
				//~ );
				//~ mail_info = database.getMailInfo(mail_id);
				//~ mail_$users = database.getUsersByMask(mail_info['target']);
				//~ api.massSend(;
					//~ mail_$users,;
					//~ mail_info['message'],;
					//~ $this->keyboards['unsubscribe'];
				//~ );
				//~ $this->answerToAdminHub($this->vid, $this->answers['mail-saved'].format(len(mail_$users)));
			//~ return true
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	private function handleCallbackMessage($data, $msg_id, &$user) : bool {
		switch ($data->type) {
			case PAYLOAD_SELECT_COURSE: // –í—ã–±—Ä–∞–Ω –∫—É—Ä—Å. –ù–∞–º–µ—Ä–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –¥–∞–ª—å—à–µ
				$this->answerSelectGroupSpec($msg_id, $data->num, $data->intent);
				return true;

			case PAYLOAD_SELECT_GROUP: // –í—ã–±—Ä–∞–Ω–∞ –≥—Ä—É–ø–ø–∞
				switch ($data->intent) {
					case INTENT_REGISTRATION: // –°—Ç—É–¥–µ–Ω—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è
						$user['gid'] = $data->gid;
						$user['question_progress'] += 1;
						$user['state'] = STATE_REG_CAN_SEND;
						$this->answerAskIfCanSend($this->vid, $user['question_progress']);
						return true;

					case INTENT_STUD_RASP_VIEW: // –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
						$this->answerSelectDate(vid, data['msg_id'], data['gid'], INTENT_STUD_RASP_VIEW, true);
						return false;

					case INTENT_EDIT_STUDENT: // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å—Ç—É–¥–µ–Ω—Ç–∞
						$user['gid'] = data['gid'];
						$this->answerShowProfile(vid, data['msg_id'], user, true);
						return true;

					case INTENT_EDIT_TYPE: // –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å—Ç—É–¥–µ–Ω—Ç–æ–º
						$user['type'] = 1;
						$user['teacher_id'] = null;
						$user['gid'] = data['gid'];
						$user['state'] = STATE_HUB;
						$this->answerToHub(vid, 1, $this->answers['welcome_post_reg']);
						return true;

					default: // –ù–µ—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏—è –¥–ª—è —Ç–∞–∫–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö
						return false;
				}

			case PAYLOAD_SELECT_DATE: // –í—ã–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞
				switch ($data->intent) {
					case INTENT_STUD_RASP_VIEW: // –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
						$this->answerShowScheduleForGroup($this->vid, $data->date, $data->target, $msg_id);
						return false;

					case INTENT_TEACHER_RASP_VIEW: // –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
						$this->answerShowScheduleForTeacher(vid, data['msg_id'], data['date'], data['target']);
						return false;

					case INTENT_VIEW_CABINETS: // –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
						$this->answerShowCabinetOccupancy(vid, data['date'], data['target']);
						return false;
				}

			default:
				return false;
		}
		/*
		

		if data['type'] == PayloadTypes.show_terms:
			# –ü–æ–∫–∞–∑ —É—Å–ª–æ–≤–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
			self.answerShowTerms(vid)
			return false

	

		if data['type'] == PayloadTypes.enter_credentials:
			# –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–≤–æ–¥ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞
			if data['after_profile'] == false:
				user['state'] = States.enter_login
			else:
				user['state'] = States.enter_login_after_profile
			self.answerAskJournalLogin(vid)
			return true

		if data['type'] == PayloadTypes.select_teacher:
			# –£–¥–∞–ª—è–µ–º –ø—Ä–æ—à–ª—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
			to_delete = ''
			for i in range(data['msg_id'], data['msg_id'] + data['amount']):
				to_delete += str(i) + ','
			api.delete(to_delete)

			# –í—ã–±—Ä–∞–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å... –Ω–æ –¥–ª—è —á–µ–≥–æ?
			if data['intent'] == INTENT_TEACHER_RASP_VIEW:
				# –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
				self.answerSelectDate(vid, null, data['teacher_id'], INTENT_TEACHER_RASP_VIEW, false)
				return false

			if data['intent'] == intents.registration:
				# –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è
				user['teacher_id'] = data['teacher_id']
				user['question_progress'] += 1
				user['state'] = STATE_REG_CAN_SEND
				self.answerAskIfCanSend(vid, user['question_progress'])
				return true

			if data['intent'] == intents.edit_type:
				# –°—Ç—É–¥–µ–Ω—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º
				api.delete(data['msg_id'])
				user['gid'] = null
				user['teacher_id'] = data['teacher_id']
				user['state'] = STATE_HUB
				user['type'] = 2
				self.answerToHub(vid, 2, self.answers['welcome_post_reg'])
				return true

		if data['type'] == PayloadTypes.edit_group:
			# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–π –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
			if data['intent'] == intents.edit_student:
				self.answerSelectGroupCourse(vid, data['msg_id'], intents.edit_student, true)
				return false

		if data['type'] == PayloadTypes.toggle_mail:
			# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
			if user['allows_mail'] == 1:
				user['allows_mail'] = 0
			else:
				user['allows_mail'] = 1
			self.answerShowProfile(vid, data['msg_id'], user, true)
			return true

		if data['type'] == PayloadTypes.edit_type:
			# –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø –ø—Ä–æ—Ñ–∏–ª—è
			user['question_progress'] = 1;
			user['state'] = States.void
			msg_id = self.answerOnStartedEdit(vid)
			if user['type'] == 1:
				# –ò–∑–º–µ–Ω—è–µ–º –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è. –î–ª—è —ç—Ç–æ–≥–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –∫—Ç–æ –æ–Ω
				msg_id = self.answerAskTeacherWhenEditing(vid)
				self.answerSelectTeacher(vid, msg_id + 1, intents.edit_type)
			else:
				# –ò–∑–º–µ–Ω—è–µ–º –Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞. –°–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–≥–æ –∫—É—Ä—Å
				self.answerSelectGroupCourse(vid, msg_id + 1, intents.edit_type, false)
			return true

		if data['type'] == PayloadTypes.unsubscribe:
			user['allows_mail'] = 0
			self.answerMailDisabled(vid)
			return true
		*/
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
	public function handleRequest() {

		// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö
		if ($this->data->type == "message_event" || $this->data->type == "message_new") {
			// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
			$user = UserModel::getByVkId($this->vid);
			if (!$user) {
				// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Å–æ–∑–¥–∞—ë–º –µ–≥–æ
				$this->answerOnMeet($this->vid);
				UserModel::create($this->vid);
				return;
			}
		}

		switch ($this->data->type) {

			// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
			case "confirmation":
				exit($_ENV['confirmation_token']);
				break;

			case "message_new":
				$text = $this->data->object->message->text;
				if (strlen($text) == 0) break; // –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ - –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º

				// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
				$need_update = $this->handlePlainMessage($text, $user);
				if ($need_update) UserModel::save($user);
				break;

			case "message_event":
				$payload = $this->data->object->payload;
				$msg_id = $this->data->object->conversation_message_id;

				// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
				$need_update = $this->handleCallbackMessage($payload, $msg_id, $user);
				if ($need_update) UserModel::save($user);
				$this->answerCallbackVk();
				break;

			default:
				exit("unknown event");
		}
	}

	// –°–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞
	// https://snipp.ru/php/word-declination
	private function num_word($value, $words, $show = true) {
		$num = $value % 100;

		if ($num > 19) { 
			$num = $num % 10; 
		}
		
		$out = ($show) ?  $value . ' ' : '';
		switch ($num) {

			case 1:
				$out .= $words[0]; break;

			case 2:
			case 3:
			case 4:
				$out .= $words[1]; break;
				
			default:
				$out .= $words[2]; break;
		}
		return $out;
	}

	// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –æ—Ü–µ–Ω–æ–∫, —Å–æ–≤–º–µ—Å—Ç–∏–º—É—é —Å TableGenerator
	private function getGradesData($login, $password) {
		// –°–æ–∑–¥–∞—ë–º —Ä–∞–∑–¥–µ–ª—è–µ–º—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
		$sh = curl_share_init();
		curl_share_setopt($sh, CURLSHOPT_SHARE, CURL_LOCK_DATA_COOKIE); // –î–µ–ª–∏–º—Å—è –∫—É–∫–∞–º–∏

		// –ü–æ–¥–∞—ë–º –∑–∞–ø—Ä–æ—Å –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
		$auth = curl_init('http://avers.vpmt.ru:8081/region_pou/region.cgi/login');
		curl_setopt($auth, CURLOPT_COOKIEFILE, "");
		curl_setopt($auth, CURLOPT_SHARE, $sh);
		curl_setopt($auth, CURLOPT_POST, 1);
		curl_setopt($auth, CURLOPT_POSTFIELDS, 'username='.$login.'&userpass='.$password);
		curl_setopt($auth, CURLOPT_ENCODING, 'windows-1251');
		curl_setopt($auth, CURLOPT_RETURNTRANSFER, 1);
		curl_exec($auth);

		// –ó–∞–ø—Ä–æ—Å –Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç –æ—Ü–µ–Ω–æ–∫
		$grades = curl_init('http://avers.vpmt.ru:8081/region_pou/region.cgi/journal_och?page=1&marks=1&export=1');
		curl_setopt($grades, CURLOPT_COOKIEFILE, "");
		curl_setopt($grades, CURLOPT_SHARE, $sh);
		curl_setopt($grades, CURLOPT_RETURNTRANSFER, 1);
		$data = curl_exec($grades);

		// –†–∞–∑—Ä—ã–≤ —Å–µ—Å—Å–∏–∏ —Å –∂—É—Ä–Ω–∞–ª–æ–º
		$logout = curl_init('http://avers.vpmt.ru:8081/region_pou/region.cgi/logout');
		curl_setopt($logout, CURLOPT_COOKIEFILE, "");
		curl_setopt($logout, CURLOPT_SHARE, $sh);
		curl_setopt($logout, CURLOPT_RETURNTRANSFER, 1);
		curl_exec($logout);

		// –ü–∞—Ä—Å–∏–Ω–≥ —ç–∫—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ XML
		// –î–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Å—Ç—Ä–æ–∫–∞—Ö —Å —Ç—ç–≥–æ–º Row
		// –ü–µ—Ä–≤—ã–µ 3 –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ—Ü–µ–Ω–æ–∫, –∏—Ö –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
		// –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä—è–¥ —Ç–æ–∂–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Ü–µ–Ω–æ–∫, –µ–≥–æ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
		$doc = new DOMDocument();
		$doc->loadXML($data);
		$rows = $doc->getElementsByTagName("Row");

		$output = [['–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞', '–û—Ü–µ–Ω–∫–∏', '–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª']];
		for ($y = 4; $y < count($rows) - 2; $y++) {
			$output_row = [];
			$children = $rows[$y]->childNodes;
			// Children - –¥–æ—á–µ—Ä–Ω–∏–µ —É–∑–ª—ã —Ç—ç–≥–∞ Row
			// –ü–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ —Å—á–∏—Ç–∞—é—Ç—Å—è —É–∑–ª–æ–º —Ç–µ–∫—Å—Ç–∞, –ø–æ—ç—Ç–æ–º—É
			// [0] - —Ç–µ–∫—Å—Ç–æ–≤—ã–π —É–∑–µ–ª
			// [1] - —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã
			// [2] - —Ç–µ–∫—Å—Ç–æ–≤—ã–π —É–∑–µ–ª
			// [3] - —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Ü–µ–Ω–∫–∏
			// [4] - —Ç–µ–∫—Å—Ç–æ–≤—ã–π —É–∑–µ–ª
			// [5] - —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª
			// [6] - —Ç–µ–∫—Å—Ç–æ–≤—ã–π —É–∑–µ–ª
			$output[] = [
				trim($children[1]->nodeValue),
				trim($children[3]->nodeValue),
				trim($children[5]->nodeValue)
			];
		}

		// –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏–∏ curl
		curl_share_close($sh);
		curl_close($auth);
		curl_close($grades);

		return $output;
	}
}
